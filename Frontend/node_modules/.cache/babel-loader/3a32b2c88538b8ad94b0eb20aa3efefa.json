{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport './App.css';\nimport { AuthContext } from './shared/context/auth-context';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport Players from './players/pages/Players';\nimport Auth from './user/pages/Auth';\nimport NewPlayer from './players/pages/NewPlayer';\nimport PlayerDetails from './players/pages/PlayerDetails';\nimport UpdatePlayer from './players/pages/UpdatePlayer';\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState();\n  const [userId, setUserId] = useState();\n\n  const login = (uid, token) => {\n    console.log('LOGING IN!');\n    setToken(token);\n    setUserId(uid);\n    setIsLoggedIn(true);\n  };\n\n  const logout = () => {\n    console.log('LOGING OUT!');\n    setToken(null);\n    setUserId(null);\n    setIsLoggedIn(false);\n  };\n\n  let routes;\n  routes = /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(Players, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/auth\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/players/new\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(NewPlayer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/player/:pid\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(PlayerDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/players/update/:pid\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(UpdatePlayer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      login: login,\n      logout: logout,\n      token: token,\n      userId: userId\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VuUAM67+jfe/P6Y7p+kd5GScchE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Redirect","Switch","AuthContext","MainNavigation","Players","Auth","NewPlayer","PlayerDetails","UpdatePlayer","App","isLoggedIn","setIsLoggedIn","token","setToken","userId","setUserId","login","uid","console","log","logout","routes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport './App.css';\nimport { AuthContext } from './shared/context/auth-context';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport Players from './players/pages/Players';\nimport Auth from './user/pages/Auth';\nimport NewPlayer from './players/pages/NewPlayer';\nimport PlayerDetails from './players/pages/PlayerDetails';\nimport UpdatePlayer from './players/pages/UpdatePlayer';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState();\n  const [userId, setUserId] = useState();\n\n  const login = (uid, token) => {\n    console.log('LOGING IN!');\n    setToken(token);\n    setUserId(uid);\n    setIsLoggedIn(true);\n  };\n\n  const logout = () => {\n    console.log('LOGING OUT!');\n    setToken(null);\n    setUserId(null);\n    setIsLoggedIn(false);\n  };\n\n  let routes;\n\n  routes = (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Players />\n      </Route>\n      <Route path=\"/auth\" exact>\n        <Auth />\n      </Route>\n      <Route path=\"/players/new\" exact>\n        <NewPlayer />\n      </Route>\n      <Route path=\"/player/:pid\" exact>\n        <PlayerDetails />\n      </Route>\n      <Route path=\"/players/update/:pid\" exact>\n        <UpdatePlayer />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        login: login,\n        logout: logout,\n        token: token,\n        userId: userId,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}