{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/players/pages/UpdatePlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './NewPlayer.css';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport { VALIDATOR_REQUIRE } from '../../util/validators';\nimport { MOCK_PLAYERS } from '../../util/MockPlayers';\n\nconst UpdatePlayer = () => {\n  _s();\n\n  //const [loadedPlayer, setLoadedPlayer] = useState(null);\n  const playerId = useParams().pid;\n  const history = useHistory();\n  const [formState, inputHandler, setFormData] = useForm({\n    age: {\n      value: null,\n      isValid: false\n    },\n    points: {\n      value: null,\n      isValid: false\n    },\n    weight: {\n      value: null,\n      isValid: false\n    },\n    height: {\n      value: null,\n      isValid: false\n    },\n    grand_slams: {\n      value: null,\n      isValid: true\n    }\n  }, false); //   useEffect(() => {\n  //     const getPlayer = () => {\n  //       const foundPlayer = auth.tennisPlayers.filter(\n  //         (player) => player.id === playerId\n  //       );\n  //       setLoadedPlayer(foundPlayer);\n  //     };\n  //     getPlayer();\n  //     console.log('LOADED PLAYER IS ' + loadedPlayer);\n  //   }, [loadedPlayer, playerId, auth.tennisPlayers]);\n\n  const foundPlayer = MOCK_PLAYERS.filter(player => player.id === playerId);\n\n  if (foundPlayer) {\n    console.log(foundPlayer);\n  }\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState);\n    history.push(`/player/${playerId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"player-title\",\n      children: \"Update Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"player-form\",\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"age\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"number\",\n        label: \"Age\",\n        errorText: \"Please enter player's age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"points\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"number\",\n        label: \"Points\",\n        errorText: \"Please enter player's points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"weight\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"number\",\n        label: \"Weight\",\n        errorText: \"Please enter player's weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"height\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"number\",\n        label: \"Height\",\n        errorText: \"Please enter player's height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"grand_slams\",\n        onInput: inputHandler,\n        validators: [],\n        element: \"input\",\n        type: \"number\",\n        label: \"Grand Slams Won\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: \"UPDATE PLAYER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePlayer, \"p+N+Zaelle6S32OHty/wm4+0OQc=\", false, function () {\n  return [useParams, useHistory, useForm];\n});\n\n_c = UpdatePlayer;\nexport default UpdatePlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePlayer\");","map":{"version":3,"sources":["/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/players/pages/UpdatePlayer.js"],"names":["React","useState","useEffect","useHistory","useParams","useForm","Input","Button","Card","VALIDATOR_REQUIRE","MOCK_PLAYERS","UpdatePlayer","playerId","pid","history","formState","inputHandler","setFormData","age","value","isValid","points","weight","height","grand_slams","foundPlayer","filter","player","id","console","log","formSubmitHandler","event","preventDefault","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport './NewPlayer.css';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport { VALIDATOR_REQUIRE } from '../../util/validators';\n\nimport { MOCK_PLAYERS } from '../../util/MockPlayers';\n\nconst UpdatePlayer = () => {\n  //const [loadedPlayer, setLoadedPlayer] = useState(null);\n  const playerId = useParams().pid;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      age: {\n        value: null,\n        isValid: false,\n      },\n      points: {\n        value: null,\n        isValid: false,\n      },\n      weight: {\n        value: null,\n        isValid: false,\n      },\n      height: {\n        value: null,\n        isValid: false,\n      },\n      grand_slams: {\n        value: null,\n        isValid: true,\n      },\n    },\n    false\n  );\n\n  //   useEffect(() => {\n  //     const getPlayer = () => {\n  //       const foundPlayer = auth.tennisPlayers.filter(\n  //         (player) => player.id === playerId\n  //       );\n  //       setLoadedPlayer(foundPlayer);\n  //     };\n  //     getPlayer();\n  //     console.log('LOADED PLAYER IS ' + loadedPlayer);\n  //   }, [loadedPlayer, playerId, auth.tennisPlayers]);\n\n  const foundPlayer = MOCK_PLAYERS.filter((player) => player.id === playerId);\n\n  if (foundPlayer) {\n    console.log(foundPlayer);\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    history.push(`/player/${playerId}`);\n  };\n\n  return (\n    <React.Fragment>\n      <h2 className=\"player-title\">Update Player</h2>\n      <form className=\"player-form\" onSubmit={formSubmitHandler}>\n        <Input\n          id=\"age\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Age\"\n          errorText=\"Please enter player's age\"\n        />\n        <Input\n          id=\"points\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Points\"\n          errorText=\"Please enter player's points\"\n        />\n        <Input\n          id=\"weight\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Weight\"\n          errorText=\"Please enter player's weight\"\n        />\n        <Input\n          id=\"height\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Height\"\n          errorText=\"Please enter player's height\"\n        />\n        <Input\n          id=\"grand_slams\"\n          onInput={inputHandler}\n          validators={[]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Grand Slams Won\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          UPDATE PLAYER\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlayer;\n"]},"metadata":{},"sourceType":"module"}