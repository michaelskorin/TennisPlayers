{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/players/pages/NewPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './NewPlayer.css';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../util/validators';\n\nconst NewPlayer = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n  const {\n    isLoading,\n    error,\n    clearError,\n    sendRequest\n  } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    name: {\n      value: '',\n      isValid: false\n    },\n    country: {\n      value: '',\n      isValid: false\n    },\n    age: {\n      value: null,\n      isValid: false\n    },\n    points: {\n      value: null,\n      isValid: false\n    },\n    weight: {\n      value: null,\n      isValid: false\n    },\n    height: {\n      value: null,\n      isValid: false\n    },\n    grand_slams: {\n      value: null,\n      isValid: true\n    },\n    image: {\n      value: null,\n      isValid: false\n    }\n  }, false); // const addDummyPlayer = () => {\n  //   MOCK_PLAYERS.push({\n  //     id: MOCK_PLAYERS.length,\n  //     name: formState.inputs.name.value,\n  //     country: formState.inputs.country.value,\n  //     age: formState.inputs.age.value,\n  //     grand_slams: formState.inputs.grand_slams.value,\n  //     ranking: null,\n  //     points: formState.inputs.points.value,\n  //   });\n  // };\n\n  const formSubmitHandler = async event => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const formData = new FormData();\n      formData.append('name', formState.inputs.name.value);\n      formData.append('country', formState.inputs.country.value);\n      formData.append('age', formState.inputs.age.value);\n      formData.append('points', formState.inputs.points.value);\n      formData.append('weight', formState.inputs.weight.value);\n      formData.append('height', formState.inputs.height.value);\n      formData.append('grand_slams', formState.inputs.grand_slams.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(`${process.env.REACT_APP_PLAYERS_BACKEND_URL}/new`, 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token // add auth token\n\n      });\n      history.push('/');\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"player-title\",\n      children: \"Add New Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"player-form\",\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"name\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(2)],\n        element: \"input\",\n        type: \"text\",\n        label: \"Name\",\n        errorText: \"Please enter a name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"country\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"text\",\n        label: \"Country\",\n        errorText: \"Please enter player's country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"age\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"number\",\n        label: \"Age\",\n        errorText: \"Please enter player's age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"points\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"number\",\n        label: \"Points\",\n        errorText: \"Please enter player's points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"weight\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"number\",\n        label: \"Weight\",\n        errorText: \"Please enter player's weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"height\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"number\",\n        label: \"Height\",\n        errorText: \"Please enter player's height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"grand_slams\",\n        onInput: inputHandler,\n        validators: [],\n        element: \"input\",\n        type: \"number\",\n        label: \"Grand Slams Won\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n        id: \"image\",\n        onInput: inputHandler,\n        errorText: \"Please provide an image.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: \"ADD PLAYER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPlayer, \"/bdft+OzsZTm6g5VH1Qhd8uGCdc=\", false, function () {\n  return [useHistory, useHttpClient, useForm];\n});\n\n_c = NewPlayer;\nexport default NewPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlayer\");","map":{"version":3,"sources":["/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/players/pages/NewPlayer.js"],"names":["React","useContext","useHistory","useForm","useHttpClient","AuthContext","Input","Button","LoadingSpinner","ErrorModal","ImageUpload","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","NewPlayer","auth","history","isLoading","error","clearError","sendRequest","formState","inputHandler","name","value","isValid","country","age","points","weight","height","grand_slams","image","formSubmitHandler","event","preventDefault","console","log","formData","FormData","append","inputs","process","env","REACT_APP_PLAYERS_BACKEND_URL","Authorization","token","push"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './NewPlayer.css';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../util/validators';\n\nconst NewPlayer = () => {\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\n\n  const [formState, inputHandler] = useForm(\n    {\n      name: {\n        value: '',\n        isValid: false,\n      },\n      country: {\n        value: '',\n        isValid: false,\n      },\n      age: {\n        value: null,\n        isValid: false,\n      },\n      points: {\n        value: null,\n        isValid: false,\n      },\n      weight: {\n        value: null,\n        isValid: false,\n      },\n      height: {\n        value: null,\n        isValid: false,\n      },\n      grand_slams: {\n        value: null,\n        isValid: true,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  // const addDummyPlayer = () => {\n  //   MOCK_PLAYERS.push({\n  //     id: MOCK_PLAYERS.length,\n  //     name: formState.inputs.name.value,\n  //     country: formState.inputs.country.value,\n  //     age: formState.inputs.age.value,\n  //     grand_slams: formState.inputs.grand_slams.value,\n  //     ranking: null,\n  //     points: formState.inputs.points.value,\n  //   });\n  // };\n\n  const formSubmitHandler = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const formData = new FormData();\n      formData.append('name', formState.inputs.name.value);\n      formData.append('country', formState.inputs.country.value);\n      formData.append('age', formState.inputs.age.value);\n      formData.append('points', formState.inputs.points.value);\n      formData.append('weight', formState.inputs.weight.value);\n      formData.append('height', formState.inputs.height.value);\n      formData.append('grand_slams', formState.inputs.grand_slams.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(\n        `${process.env.REACT_APP_PLAYERS_BACKEND_URL}/new`,\n        'POST',\n        formData,\n        {\n          Authorization: 'Bearer ' + auth.token, // add auth token\n        }\n      );\n      history.push('/');\n    } catch (error) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner asOverlay />\n        </div>\n      )}\n      <h2 className=\"player-title\">Add New Player</h2>\n      <form className=\"player-form\" onSubmit={formSubmitHandler}>\n        <Input\n          id=\"name\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(2)]}\n          element=\"input\"\n          type=\"text\"\n          label=\"Name\"\n          errorText=\"Please enter a name\"\n        />\n        <Input\n          id=\"country\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"text\"\n          label=\"Country\"\n          errorText=\"Please enter player's country\"\n        />\n        <Input\n          id=\"age\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Age\"\n          errorText=\"Please enter player's age\"\n        />\n        <Input\n          id=\"points\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Points\"\n          errorText=\"Please enter player's points\"\n        />\n        <Input\n          id=\"weight\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Weight\"\n          errorText=\"Please enter player's weight\"\n        />\n        <Input\n          id=\"height\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Height\"\n          errorText=\"Please enter player's height\"\n        />\n        <Input\n          id=\"grand_slams\"\n          onInput={inputHandler}\n          validators={[]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Grand Slams Won\"\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLAYER\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlayer;\n"]},"metadata":{},"sourceType":"module"}