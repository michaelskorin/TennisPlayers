{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/user/pages/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport './Auth.css';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { VALIDATOR_EMAIL, VALIDATOR_MIN, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../util/validators';\n\nconst Auth = () => {\n  _s();\n\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    clearError,\n    sendRequest\n  } = useHttpClient();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_USERS_BACKEND_URL}/signup`, 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.userId, responseData.token);\n        history.push('/');\n      } catch (error) {}\n    } else {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_USERS_BACKEND_URL}/signup`, 'POST', JSON.stringify({\n          name: formState.inputs.name.value,\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.userId, responseData.token);\n      } catch (error) {}\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"name\",\n          type: \"text\",\n          onInput: inputHandler,\n          label: \"Your Name\",\n          errorText: \"Please enter your name\",\n          validators: [VALIDATOR_REQUIRE()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"email\",\n          type: \"email\",\n          onInput: inputHandler,\n          label: \"E-mail\",\n          errorText: \"Please enter a valid email\",\n          validators: [VALIDATOR_EMAIL()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          onInput: inputHandler,\n          label: \"Password\",\n          errorText: \"Please enter a valid password (at least 6 chars)\",\n          validators: [VALIDATOR_MINLENGTH(6)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: switchModeHandler,\n        children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"0grmJ1xnGQKid8Y9Z+twaKPIfjI=\", false, function () {\n  return [useHistory, useHttpClient, useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/user/pages/Auth.js"],"names":["React","useState","useContext","useEffect","useHistory","AuthContext","Input","Button","Card","LoadingSpinner","ErrorModal","useForm","useHttpClient","VALIDATOR_EMAIL","VALIDATOR_MIN","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Auth","history","auth","isLoading","error","clearError","sendRequest","isLoginMode","setIsLoginMode","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","responseData","process","env","REACT_APP_USERS_BACKEND_URL","JSON","stringify","login","userId","token","push"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { AuthContext } from '../../shared/context/auth-context';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport './Auth.css';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MIN,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../util/validators';\n\nconst Auth = () => {\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\n\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false,\n          },\n        },\n        false\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    }\n\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_USERS_BACKEND_URL}/signup`,\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            'Content-Type': 'application/json',\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n        history.push('/');\n      } catch (error) {}\n    } else {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_USERS_BACKEND_URL}/signup`,\n          'POST',\n          JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            'Content-Type': 'application/json',\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (error) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              onInput={inputHandler}\n              label=\"Your Name\"\n              errorText=\"Please enter your name\"\n              validators={[VALIDATOR_REQUIRE()]}\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            onInput={inputHandler}\n            label=\"E-mail\"\n            errorText=\"Please enter a valid email\"\n            validators={[VALIDATOR_EMAIL()]}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            onInput={inputHandler}\n            label=\"Password\"\n            errorText=\"Please enter a valid password (at least 6 chars)\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}