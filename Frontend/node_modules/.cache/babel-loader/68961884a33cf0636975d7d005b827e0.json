{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/players/pages/UpdatePlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './NewPlayer.css';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../util/validators';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nconst UpdatePlayer = () => {\n  _s();\n\n  const [loadedPlayer, setLoadedPlayer] = useState(null);\n  const playerId = useParams().pid;\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const [formState, inputHandler, setFormData] = useForm({\n    age: {\n      value: null,\n      isValid: false\n    },\n    points: {\n      value: null,\n      isValid: false\n    },\n    weight: {\n      value: null,\n      isValid: false\n    },\n    height: {\n      value: null,\n      isValid: false\n    },\n    grand_slams: {\n      value: null,\n      isValid: true\n    }\n  }, false); //   useEffect(() => {\n  //     const getPlayer = () => {\n  //       const foundPlayer = auth.tennisPlayers.filter(\n  //         (player) => player.id === playerId\n  //       );\n  //       setLoadedPlayer(foundPlayer);\n  //     };\n  //     getPlayer();\n  //     console.log('LOADED PLAYER IS ' + loadedPlayer);\n  //   }, [loadedPlayer, playerId, auth.tennisPlayers]);\n\n  useEffect(() => {\n    const foundPlayer = auth.tennisPlayers.filter(player => player.id === playerId);\n\n    if (foundPlayer) {\n      setFormData({\n        age: {\n          value: foundPlayer.age,\n          isValid: true\n        },\n        points: {\n          value: foundPlayer.points,\n          isValid: true\n        },\n        weight: {\n          value: foundPlayer.weight,\n          isValid: true\n        },\n        height: {\n          value: foundPlayer.height,\n          isValid: true\n        },\n        grand_slams: {\n          value: foundPlayer.grand_slams,\n          isValid: true\n        }\n      }, true);\n    }\n  }, [setFormData, playerId, auth.tennisPlayers]);\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState);\n    history.push(`/players/update/${playerId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"player-title\",\n      children: \"Update Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"player-form\",\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"age\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"number\",\n        label: \"Age\",\n        errorText: \"Please enter player's age\",\n        initialValue: foundPlayer.title,\n        initialValid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"points\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"number\",\n        label: \"Points\",\n        errorText: \"Please enter player's points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"weight\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"number\",\n        label: \"Weight\",\n        errorText: \"Please enter player's weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"height\",\n        onInput: inputHandler,\n        validators: [VALIDATOR_REQUIRE()],\n        element: \"input\",\n        type: \"number\",\n        label: \"Height\",\n        errorText: \"Please enter player's height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"grand_slams\",\n        onInput: inputHandler,\n        validators: [],\n        element: \"input\",\n        type: \"number\",\n        label: \"Grand Slams Won\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: \"UPDATE PLAYER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePlayer, \"PhkzisoOpKlx1q8/0isvAElG3h0=\", false, function () {\n  return [useParams, useHistory, useForm];\n});\n\n_c = UpdatePlayer;\nexport default UpdatePlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePlayer\");","map":{"version":3,"sources":["/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/players/pages/UpdatePlayer.js"],"names":["React","useContext","useState","useEffect","useHistory","useParams","useForm","Input","Button","Card","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","AuthContext","UpdatePlayer","loadedPlayer","setLoadedPlayer","playerId","pid","history","auth","formState","inputHandler","setFormData","age","value","isValid","points","weight","height","grand_slams","foundPlayer","tennisPlayers","filter","player","id","formSubmitHandler","event","preventDefault","console","log","push","title"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport './NewPlayer.css';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../util/validators';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nconst UpdatePlayer = () => {\n  const [loadedPlayer, setLoadedPlayer] = useState(null);\n  const playerId = useParams().pid;\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      age: {\n        value: null,\n        isValid: false,\n      },\n      points: {\n        value: null,\n        isValid: false,\n      },\n      weight: {\n        value: null,\n        isValid: false,\n      },\n      height: {\n        value: null,\n        isValid: false,\n      },\n      grand_slams: {\n        value: null,\n        isValid: true,\n      },\n    },\n    false\n  );\n\n  //   useEffect(() => {\n  //     const getPlayer = () => {\n  //       const foundPlayer = auth.tennisPlayers.filter(\n  //         (player) => player.id === playerId\n  //       );\n  //       setLoadedPlayer(foundPlayer);\n  //     };\n  //     getPlayer();\n  //     console.log('LOADED PLAYER IS ' + loadedPlayer);\n  //   }, [loadedPlayer, playerId, auth.tennisPlayers]);\n\n  useEffect(() => {\n    const foundPlayer = auth.tennisPlayers.filter(\n      (player) => player.id === playerId\n    );\n\n    if (foundPlayer) {\n      setFormData(\n        {\n          age: {\n            value: foundPlayer.age,\n            isValid: true,\n          },\n          points: {\n            value: foundPlayer.points,\n            isValid: true,\n          },\n          weight: {\n            value: foundPlayer.weight,\n            isValid: true,\n          },\n          height: {\n            value: foundPlayer.height,\n            isValid: true,\n          },\n          grand_slams: {\n            value: foundPlayer.grand_slams,\n            isValid: true,\n          },\n        },\n        true\n      );\n    }\n  }, [setFormData, playerId, auth.tennisPlayers]);\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    history.push(`/players/update/${playerId}`);\n  };\n\n  return (\n    <React.Fragment>\n      <h2 className=\"player-title\">Update Player</h2>\n      <form className=\"player-form\" onSubmit={formSubmitHandler}>\n        <Input\n          id=\"age\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Age\"\n          errorText=\"Please enter player's age\"\n          initialValue={foundPlayer.title}\n          initialValid={true}\n        />\n        <Input\n          id=\"points\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Points\"\n          errorText=\"Please enter player's points\"\n        />\n        <Input\n          id=\"weight\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Weight\"\n          errorText=\"Please enter player's weight\"\n        />\n        <Input\n          id=\"height\"\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE()]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Height\"\n          errorText=\"Please enter player's height\"\n        />\n        <Input\n          id=\"grand_slams\"\n          onInput={inputHandler}\n          validators={[]}\n          element=\"input\"\n          type=\"number\"\n          label=\"Grand Slams Won\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          UPDATE PLAYER\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlayer;\n"]},"metadata":{},"sourceType":"module"}