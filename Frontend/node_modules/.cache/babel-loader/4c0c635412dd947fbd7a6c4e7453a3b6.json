{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/user/pages/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport './Auth.css';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { VALIDATOR_EMAIL, VALIDATOR_MIN, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../util/validators';\n\nconst Auth = () => {\n  _s();\n\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    if (!auth.isLoggedIn) {\n      auth.login();\n      history.push('/');\n    }\n\n    console.log(formState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"name\",\n          type: \"text\",\n          onInput: inputHandler,\n          label: \"Your Name\",\n          errorText: \"Please enter your name\",\n          validators: [VALIDATOR_REQUIRE()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"email\",\n          type: \"email\",\n          onInput: inputHandler,\n          label: \"E-mail\",\n          errorText: \"Please enter a valid email\",\n          validators: [VALIDATOR_EMAIL()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          onInput: inputHandler,\n          label: \"Password\",\n          errorText: \"Please enter a valid password (at least 6 chars)\",\n          validators: [VALIDATOR_MINLENGTH(6)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: switchModeHandler,\n        children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"rxH6XogU9bYvMDFbsbao1oUBQ5s=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/user/pages/Auth.js"],"names":["React","useState","useContext","useEffect","useHistory","AuthContext","Input","Button","Card","LoadingSpinner","useForm","VALIDATOR_EMAIL","VALIDATOR_MIN","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Auth","history","auth","isLoading","setIsLoading","isLoginMode","setIsLoginMode","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","isLoggedIn","login","push","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { AuthContext } from '../../shared/context/auth-context';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport './Auth.css';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MIN,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../util/validators';\n\nconst Auth = () => {\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false,\n          },\n        },\n        false\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    }\n\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    if (!auth.isLoggedIn) {\n      auth.login();\n      history.push('/');\n    }\n\n    console.log(formState);\n  };\n\n  return (\n    <React.Fragment>\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              onInput={inputHandler}\n              label=\"Your Name\"\n              errorText=\"Please enter your name\"\n              validators={[VALIDATOR_REQUIRE()]}\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            onInput={inputHandler}\n            label=\"E-mail\"\n            errorText=\"Please enter a valid email\"\n            validators={[VALIDATOR_EMAIL()]}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            onInput={inputHandler}\n            label=\"Password\"\n            errorText=\"Please enter a valid password (at least 6 chars)\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}