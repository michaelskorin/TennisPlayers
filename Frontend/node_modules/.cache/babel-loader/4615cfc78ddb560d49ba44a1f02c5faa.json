{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/players/pages/Players.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport PlayersList from '../components/PlayersList';\nimport './Players.css';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Players = () => {\n  _s();\n\n  const [loadedPlayers, setLoadedPlayers] = useState(null);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const auth = useContext(AuthContext);\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}`);\n        setLoadedPlayers(responseData);\n      } catch (error) {}\n    };\n\n    fetchPlayers();\n  }, [sendRequest]);\n\n  const playerDeleteHandler = deletedPlayerId => {\n    setLoadedPlayers(prevLoadedPlayers => prevLoadedPlayers.filter(player => player.id !== deletedPlayerId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PlayersList, {\n      items: loadedPlayers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Players, \"KOCxG5iGWm2eciX00M8GFh1SVGU=\", false, function () {\n  return [useHttpClient];\n});\n\n_c = Players;\nexport default Players;\n\nvar _c;\n\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"sources":["/Users/michaelskorin/Desktop/Web Development/TennisPlayers/tennis-players/Frontend/src/players/pages/Players.js"],"names":["React","useContext","useState","useEffect","PlayersList","AuthContext","LoadingSpinner","ErrorModal","useHttpClient","Players","loadedPlayers","setLoadedPlayers","isLoading","error","sendRequest","clearError","auth","fetchPlayers","responseData","process","env","REACT_APP_BACKEND_URL","playerDeleteHandler","deletedPlayerId","prevLoadedPlayers","filter","player","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,eAAP;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,SAASC,aAAT,QAA8B,8BAA9B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM;AAAEU,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA;AAAjC,MAAgDP,aAAa,EAAnE;AAEA,QAAMQ,IAAI,GAAGf,UAAU,CAACI,WAAD,CAAvB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,YAAY,GAAG,YAAY;AAC/B,UAAI;AACF,cAAMC,YAAY,GAAG,MAAMJ,WAAW,CACnC,GAAEK,OAAO,CAACC,GAAR,CAAYC,qBAAsB,EADD,CAAtC;AAGAV,QAAAA,gBAAgB,CAACO,YAAD,CAAhB;AACD,OALD,CAKE,OAAOL,KAAP,EAAc,CAAE;AACnB,KAPD;;AAQAI,IAAAA,YAAY;AACb,GAVQ,EAUN,CAACH,WAAD,CAVM,CAAT;;AAYA,QAAMQ,mBAAmB,GAAIC,eAAD,IAAqB;AAC/CZ,IAAAA,gBAAgB,CAAEa,iBAAD,IACfA,iBAAiB,CAACC,MAAlB,CAA0BC,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcJ,eAAnD,CADc,CAAhB;AAGD,GAJD;;AAMA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEV,KAAnB;AAA0B,MAAA,OAAO,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,SAAS,iBACR;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,SAAS;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ,eAOE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnCD;;GAAMD,O;UAEkDD,a;;;KAFlDC,O;AAqCN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\n\nimport PlayersList from '../components/PlayersList';\nimport './Players.css';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Players = () => {\n  const [loadedPlayers, setLoadedPlayers] = useState(null);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const auth = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}`\n        );\n        setLoadedPlayers(responseData);\n      } catch (error) {}\n    };\n    fetchPlayers();\n  }, [sendRequest]);\n\n  const playerDeleteHandler = (deletedPlayerId) => {\n    setLoadedPlayers((prevLoadedPlayers) =>\n      prevLoadedPlayers.filter((player) => player.id !== deletedPlayerId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner asOverlay />\n        </div>\n      )}\n      <PlayersList items={loadedPlayers} />;\n    </React.Fragment>\n  );\n};\n\nexport default Players;\n"]},"metadata":{},"sourceType":"module"}